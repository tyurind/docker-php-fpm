#!/bin/sh

##############################################################################
# If a PUID/PGID enviroment variable exists, use those values for the `uid`
# and `gid` when executing scripts, otherwise change the dev user's uid and
# gid to match the user that owns the project directory and run a command as
# that user.
##############################################################################

WORKUSER_LOCK=
WORKUSER_LOCK_FILE=/etc/workuser.loc

__exec_cmd()
{
    local byuser=$1

    if [ -x "/sbin/su-exec" ]; then
        su-exec "$@"
    elif [ -x "/usr/sbin/setuser" ]; then
        if [ "$1" = "root" ]; then
            shift
            exec "$@"
        else
            exec setuser "$@"
        fi
    else
        if [ "$1" = "root" ]; then
            shift
            exec "$@"
        else
            exec sudo -u "$@"
        fi
    fi
}


if [ "$1" = "sudo" ] || [ "$1" = "setuser" ]; then
    __exec_cmd root "$@"
    exit
fi

if [ "$(id -u)" != "0" ]; then
    echo "Permission denied"
    exit 1
fi


dev_user="${WORKUSER-dev}"
stat_dir=$(pwd)


__useradd_dev()
{
    # dev_user=dev
    # mkdir -p /etc/sudoers.d

    groupadd -r $dev_user
    # useradd dev -s /bin/bash -m -g dev
    useradd -r -s /bin/bash --create-home -g $dev_user $dev_user
    echo "$dev_user:password" | chpasswd
    # echo "dev   ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers.d/dev  && chmod 0440 /etc/sudoers.d/dev
    # rsync -a /root/ /home/dev/

    # chown -R dev:dev /home/dev/
    # chmod 0777 /home/dev
}

# if the PUID environment variable exists, assume that is the preferred user id,
# otherwise use the $stat_dir
if [ "" != "$PUID" ]; then
    uid=$PUID
else
    uid=$(stat -c '%u' $stat_dir)
fi

# if the PGID environment variable exists, assume that is the preferred group id,
# otherwise use the $stat_dir
if [ "" != "$PGID" ]; then
    gid=$PGID
else
    gid=$(stat -c '%g' $stat_dir)
fi

# if [ "0" = "$uid" ]; then
#     __exec_cmd root "$@"
#     exit 0
# fi


# Ensure the correct user id is available in the sudoers file (if the
# specified UID already existed in the image)
#id -nu $uid > /dev/null 2>&1
#if [ 0 -eq $? ]; then
#    echo "$(id -nu $uid)   ALL=(ALL:ALL) NOPASSWD:ALL" > "/etc/sudoers.d/$(id -nu $uid)" \
#        && chmod 0440 "/etc/sudoers.d/$(id -nu $uid)"
#    # echo "dev   ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers.d/dev
#    # echo "$(id -nu $uid) ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
#fi

id -nu $dev_user > /dev/null 2>&1
if [ 0 -ne $? ]; then
   __useradd_dev
fi

# update the dev user with the specified UID/GID values
__workusermod()
{
    if [ -e "${WORKUSER_LOCK_FILE}" ]; then
        return
    fi

    local real_uid=$(id -u $dev_user)
    local real_gid=$(id -g $dev_user)

    if [ "${real_gid}" != "$gid" ] && [ "$gid" != 0 ]; then
        groupmod -g $gid -o $dev_user > /dev/null 2>&1
        touch ${WORKUSER_LOCK_FILE}
    fi
    if [ "${real_uid}" != "$uid" ] && [ "$uid" != 0 ]; then
        usermod -u $uid -o $dev_user > /dev/null 2>&1
        touch ${WORKUSER_LOCK_FILE}
    fi
}

__workusermod

# chown -R dev:dev ~dev/ > /dev/null 2>&1

CMD_SCRIPT_NAME="${0##*/}"
while [ "${1##*/}" = "$CMD_SCRIPT_NAME" ]; do
    shift
done

__exec_cmd $dev_user "$@"

# if [ -x "/usr/sbin/setuser" ]; then
#     exec setuser $dev_user "$@"
# else
#     exec sudo -u $dev_user "$@"
# fi


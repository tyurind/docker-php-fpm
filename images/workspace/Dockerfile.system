#
#--------------------------------------------------------------------------
# Image Setup
# $REF: $
#--------------------------------------------------------------------------
#
# To edit the 'workspace' base Image, visit its repository on Github
#    https://github.com/Laradock/workspace
#
# Базовый контейне
#   See: https://github.com/phusion/baseimage-docker
#
# FROM laradock/workspace
#   See: https://github.com/laradock/workspace/blob/master/Dockerfile-71
#
FROM laradock/workspace:2.0-71

RUN rm -rf /var/log/lastlog /var/log/faillog

COPY ./Dockerfile.system      /etc/Dockerfile.system
COPY ./aliases.sh      /etc/aliases.sh
ADD  ./bin             /usr/sbin
ADD  ./src             /usr/local/etc/src

#
#--------------------------------------------------------------------------
# Mandatory Software's Installation
#--------------------------------------------------------------------------
#
# Mandatory Software's such as ("php7.1-cli", "git", "vim", ....) are
# installed on the base image 'laradock/workspace' image. If you want
# to add more Software's or remove existing one, you need to edit the
# base image (https://github.com/Laradock/workspace).
#

#####################################
# Non-Root User:
#####################################
USER root

ARG TZ=UTC

ENV TZ ${TZ}
ENV PUID 1000
ENV PGID 1000

RUN bash /usr/local/etc/src/apt-install.sh
RUN bash /usr/local/etc/src/useradd.sh


#
#--------------------------------------------------------------------------
# PHP Installation
#--------------------------------------------------------------------------
#
COPY ./laravel.ini /etc/php/7.1/cli/conf.d/50-laravel.ini

RUN bash /usr/local/etc/src/php.sh


#####################################
# Dusk Dependencies:
#####################################

ARG CHROME_DRIVER_VERSION=2.32
ENV CHROME_DRIVER_VERSION ${CHROME_DRIVER_VERSION}

RUN bash /usr/local/etc/src/dusk.sh

#####################################
# ssh:
#####################################

ARG INSTALL_WORKSPACE_SSH=true
ENV INSTALL_WORKSPACE_SSH ${INSTALL_WORKSPACE_SSH}

ADD insecure_id_rsa     /tmp/id_rsa
ADD insecure_id_rsa.pub /tmp/id_rsa.pub

RUN bash /usr/local/etc/src/ssh.sh
## -----------------------------------


#####################################
# Node / NVM:
#####################################

USER workuser

ARG NODE_VERSION=9.10.1
ENV NODE_VERSION ${NODE_VERSION}

ARG NPM_REGISTRY
ENV NPM_REGISTRY ${NPM_REGISTRY}

ENV NVM_DIR /home/workuser/.nvm
ENV INSTALL_NODE true

RUN if [ ${INSTALL_NODE} = true ]; then \
    # Install nvm (A Node Version Manager)
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash && \
        . $NVM_DIR/nvm.sh && \
        nvm install ${NODE_VERSION} && \
        nvm use ${NODE_VERSION} && \
        nvm alias ${NODE_VERSION} && \
        if [ ${NPM_REGISTRY} ]; then \
        npm config set registry ${NPM_REGISTRY} \
        ;fi && \
        npm install -g gulp bower grunt webpack yarn \
;fi

# Wouldn't execute when added to the RUN statement in the above block
# Source NVM when loading bash since ~/.profile isn't loaded on non-login shell
RUN if [ ${INSTALL_NODE} = true ]; then \
    echo "" >> ~/.bashrc && \
    echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm' >> ~/.bashrc \
;fi

# Add NVM binaries to root's .bashrc
USER root

RUN if [ ${INSTALL_NODE} = true ]; then \
    echo "" >> ~/.bashrc && \
    echo 'export NVM_DIR="/home/laradock/.nvm"' >> ~/.bashrc && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm' >> ~/.bashrc \
;fi

# Add PATH for node
ENV PATH $PATH:$NVM_DIR/versions/node/v${NODE_VERSION}/bin
RUN if [ ${NPM_REGISTRY} ]; then \
    . ~/.bashrc && npm config set registry ${NPM_REGISTRY} \
;fi
## -----------------------------------


RUN install_clean

# Set default work directory
WORKDIR /var/www

CMD ["sudo", "/sbin/my_init"]

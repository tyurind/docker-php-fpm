#
#--------------------------------------------------------------------------
# Image Setup
#--------------------------------------------------------------------------
#
# To edit the 'php-fpm' base Image, visit its repository on Github
#    https://github.com/Laradock/php-fpm
#
# To change its version, see the available Tags on the Docker Hub:
#    https://hub.docker.com/r/laradock/php-fpm/tags/
#
# Note: Base Image name format {image-tag}-{php-version}
#

FROM laradock/php-fpm:2.0-56

RUN mkdir -p /var/www 2>&1 >/dev/null

COPY .      /bd_build
ADD ./bin /usr/sbin

#
#--------------------------------------------------------------------------
# Mandatory Software's Installation
#--------------------------------------------------------------------------
#
# Mandatory Software's such as ("mcrypt", "pdo_mysql", "libssl-dev", ....)
# are installed on the base image 'laradock/php-fpm' image. If you want
# to add more Software's or remove existing one, you need to edit the
# base image (https://github.com/Laradock/php-fpm).
#

#
#--------------------------------------------------------------------------
# Optional Software's Installation
#--------------------------------------------------------------------------
#
# Optional Software's will only be installed if you set them to `true`
# in the `docker-compose.yml` before the build.
# Example:
#   - INSTALL_ZIP_ARCHIVE=true
#
RUN apt-get update -yqq

#####################################
# SOAP:
#####################################
RUN apt-get -y install libxml2-dev php-soap && \
    docker-php-ext-install soap

#####################################
# pgsql
#####################################
RUN docker-php-ext-install pgsql

#####################################
# pgsql client
#####################################

# ARG INSTALL_PG_CLIENT=false
# RUN if [ ${INSTALL_PG_CLIENT} = true ]; then \
#     # Install the pgsql clint
#     apt-get update -yqq && \
#     apt-get install -y postgresql-client \
# ;fi

#####################################
# xDebug:
#####################################
RUN apt-get install -y php5-xdebug && \
    echo "zend_extension=/usr/lib/php5/20131226/xdebug.so" > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Copy xdebug configration for remote debugging
# COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini


#####################################
# PHP REDIS EXTENSION FOR PHP 5
#####################################
RUN printf "\n" | pecl install -o -f redis \
    &&  rm -rf /tmp/pear \
    &&  docker-php-ext-enable redis

#####################################
# Swoole EXTENSION FOR PHP 5
#####################################
RUN pecl install swoole-2.0.11 \
    &&  docker-php-ext-enable swoole

#####################################
# MongoDB:
#####################################

ARG INSTALL_MONGO=false
RUN if [ ${INSTALL_MONGO} = true ]; then \
    # Install the mongodb extension
    pecl install mongodb && \
    docker-php-ext-enable mongodb \
;fi

#####################################
# AMQP:
#####################################

ARG INSTALL_AMQP=true
RUN if [ ${INSTALL_AMQP} = true ]; then \
    apt-get update && \
    apt-get install librabbitmq-dev -y && \
    # Install the amqp extension
    pecl install amqp && \
    docker-php-ext-enable amqp \
;fi

#####################################
# ZipArchive:
#####################################

ARG INSTALL_ZIP_ARCHIVE=true
RUN if [ ${INSTALL_ZIP_ARCHIVE} = true ]; then \
    # Install the zip extension
    docker-php-ext-install zip \
;fi

#####################################
# bcmath:
#####################################

ARG INSTALL_BCMATH=true
RUN if [ ${INSTALL_BCMATH} = true ]; then \
    # Install the bcmath extension
    docker-php-ext-install bcmath \
;fi

#####################################
# GMP (GNU Multiple Precision):
#####################################

ARG INSTALL_GMP=true
RUN if [ ${INSTALL_GMP} = true ]; then \
    # Install the GMP extension
    apt-get update -yqq && \
    apt-get install -y libgmp-dev && \
    ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h && \
    docker-php-ext-install gmp \
;fi

#####################################
# PHP Memcached:
#####################################

ARG INSTALL_MEMCACHED=true
RUN if [ ${INSTALL_MEMCACHED} = true ]; then \
    # Install the php memcached extension
    pecl install memcached-2.2.0 && \
    docker-php-ext-enable memcached \
;fi

#####################################
# Exif:
#####################################

ARG INSTALL_EXIF=true
RUN if [ ${INSTALL_EXIF} = true ]; then \
    # Enable Exif PHP extentions requirements
    docker-php-ext-install exif \
;fi

#####################################
# PHP Aerospike:
#####################################

# ARG INSTALL_AEROSPIKE=true
# ENV INSTALL_AEROSPIKE ${INSTALL_AEROSPIKE}
# # Copy aerospike configration for remote debugging
# COPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini
# RUN if [ ${INSTALL_AEROSPIKE} = true ]; then \
#     # Install the php aerospike extension
#     curl -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/aerospike/aerospike-client-php5/archive/3.4.15.tar.gz" \
#     && mkdir -p aerospike-client-php \
#     && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \
#     && ( \
#         cd aerospike-client-php/src/aerospike \
#         && phpize \
#         && ./build.sh \
#         && make install \
#     ) \
#     && rm /tmp/aerospike-client-php.tar.gz \
#     && docker-php-ext-enable aerospike \
# ;fi

#####################################
# Opcache:
#####################################

ARG INSTALL_OPCACHE=true
RUN if [ ${INSTALL_OPCACHE} = true ]; then \
    docker-php-ext-install opcache \
;fi

# Copy opcache configration
COPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini

#####################################
# Mysqli Modifications:
#####################################

ARG INSTALL_MYSQLI=true
# MySQL extenstion is available for Php5.6 and lower only
COPY ./mysql.ini /usr/local/etc/php/conf.d/mysql.ini
RUN if [ ${INSTALL_MYSQLI} = true ]; then \
    docker-php-ext-install mysql && \
    docker-php-ext-install mysqli \
;fi

#####################################
# Tokenizer Modifications:
#####################################

ARG INSTALL_TOKENIZER=true
RUN if [ ${INSTALL_TOKENIZER} = true ]; then \
    docker-php-ext-install tokenizer \
;fi

#####################################
# Human Language and Character Encoding Support:
#####################################

ARG INSTALL_INTL=true
RUN if [ ${INSTALL_INTL} = true ]; then \
    # Install intl and requirements
    apt-get install -y zlib1g-dev libicu-dev g++ && \
    docker-php-ext-configure intl && \
    docker-php-ext-install intl \
;fi

#####################################
# GHOSTSCRIPT:
#####################################

# ARG INSTALL_GHOSTSCRIPT=true
# RUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \
#     # Install the ghostscript extension for PDF editing
#     apt-get update -yqq && \
#     apt-get install -y poppler-utils ghostscript \
# ;fi

#####################################
# LDAP:
#####################################

ARG INSTALL_LDAP=true
RUN if [ ${INSTALL_LDAP} = true ]; then \
    apt-get update -yqq && \
    apt-get install -y libldap2-dev && \
    docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \
    docker-php-ext-install ldap \
;fi

#####################################
# SQL SERVER:
#####################################
# ARG INSTALL_MSSQL=true
# ENV INSTALL_MSSQL ${INSTALL_MSSQL}

# RUN if [ ${INSTALL_MSSQL} = true ]; then \
#     apt-get -y install php5-sybase freetds-bin && \
#     cp /usr/lib/php5/20131226/*.so /usr/local/lib/php/extensions/no-debug-non-zts-20131226/ && \
#     docker-php-ext-enable mssql pdo pdo_dblib \
# ;fi


#####################################
# IMAP:
#####################################
ARG INSTALL_IMAP=true
ENV INSTALL_IMAP ${INSTALL_IMAP}
RUN if [ ${INSTALL_IMAP} = true ]; then \
    apt-get update && \
    apt-get install -y libc-client-dev libkrb5-dev && \
    rm -r /var/lib/apt/lists/* && \
    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
    docker-php-ext-install imap \
;fi

#####################################
# Check PHP version:
#####################################

RUN php -v | head -n 1 | grep -q "PHP 5.6."

#
#--------------------------------------------------------------------------
# Final Touch
#--------------------------------------------------------------------------
#

# END PHP Installation --------------------------

ADD ./conf.d/*.ini /usr/local/etc/php/conf.d/
ADD ./php-fpm.d/*.conf /usr/local/etc/php-fpm.d/


RUN curl -s http://getcomposer.org/installer | php && \
    mv composer.phar /usr/local/bin/composer


# RUN usermod -u 1000 www-data

WORKDIR /var/www

CMD ["php-fpm"]

EXPOSE 9000
